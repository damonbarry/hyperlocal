var N = null;var searchIndex = {};
searchIndex["hyperlocal"]={"doc":"hyperlocal provides hyper client and server bindings for unix domain sockets","items":[[3,"Uri","hyperlocal","A type which implements `Into` for hyper's  `hyper::Uri` type targetting unix domain sockets.",N,N],[0,"client","","Hyper client bindings for unix domain sockets",N,N],[3,"UnixConnector","hyperlocal::client","A type which implements hyper's client connector interface for unix domain sockets",N,N],[4,"ConnectFuture","","",N,N],[13,"Start","","",0,N],[13,"Connect","","",0,N],[11,"clone","","",1,[[["self"]],["unixconnector"]]],[11,"new","","",1,[[],["self"]]],[11,"connect","","",1,N],[11,"poll","","",0,[[["self"]],["poll"]]],[0,"server","hyperlocal","Hyper server bindings for unix domain sockets",N,N],[3,"Server","hyperlocal::server","An instance of a unix domain socket server created through `Server::bind`.",N,N],[3,"Serve","","A stream mapping incoming connections to new services.",N,N],[3,"Connecting","","A future building a new `Service` to a `Connection`.",N,N],[3,"Http","","A lower-level method of creating a unix domain socket server.",N,N],[3,"Incoming","","A stream of unix domain socket connections.",N,N],[11,"bind","","Binds a new server instance to a unix domain socket path.",2,[[["p"],["s"]],["result",["server"]]]],[11,"local_addr","","Return the local address of the underlying socket that this server is listening on.",2,[[["self"]],["socketaddr"]]],[11,"run","","Start a new tokio runtime, and drive this server on it.",2,[[["self"]],["result"]]],[11,"poll","","",3,[[["self"]],["poll",["option"]]]],[11,"poll","","",4,[[["self"]],["poll"]]],[11,"clone","","",5,[[["self"]],["http"]]],[11,"new","","Creates a new instance of the HTTP protocol, ready to spawn a server or start accepting connections.",5,[[],["self"]]],[11,"from_hyper","","Creates a new instance of the HTTP protocol using the given hyper `Http`, ready to spawn a server or start accepting connections.",5,[[["hyperhttp"]],["self"]]],[11,"serve_path","","Bind the provided `path` with the default `Handle` and return `Serve`.",5,[[["self"],["p"],["s"]],["result",["serve"]]]],[11,"serve_path_handle","","Bind the provided `path` with the `Handle` and return `Serve`.",5,[[["self"],["p"],["handle"],["s"]],["result",["serve"]]]],[11,"serve_incoming","","Bind the provided stream of incoming `UnixStream` objects with a `NewService`.",5,[[["self"],["incoming"],["s"]],["serve"]]],[11,"from","","",5,[[["hyperhttp"]],["self"]]],[11,"new","","Bind a listener to the provided `path` with the provided `Handle`.",6,[[["p"],["option",["handle"]]],["result"]]],[11,"from_std","","Wrap the provided already-bound listener in a `tokio_uds` listener using the provided `Handle`.",6,[[["stdunixlistener"],["handle"]],["result"]]],[11,"local_addr","","Get the local address bound to this listener.",6,[[["self"]],["socketaddr"]]],[11,"poll","","",6,[[["self"]],["poll",["option"]]]],[11,"fmt","hyperlocal","",7,[[["self"],["formatter"]],["result"]]],[11,"into","","",7,[[["self"]],["hyperuri"]]],[11,"new","","Productes a new `Uri` from path to domain socket and request path. request path should include a leading slash",7,[[["p"],["str"]],["self"]]]],"paths":[[4,"ConnectFuture"],[3,"UnixConnector"],[3,"Server"],[3,"Serve"],[3,"Connecting"],[3,"Http"],[3,"Incoming"],[3,"Uri"]]};
initSearch(searchIndex);
